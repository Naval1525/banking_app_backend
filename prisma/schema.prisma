generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]

  @@map("users")
}

model Account {
  id        String   @id @default(cuid())
  userId    String
  name      String
  balance   Decimal  @default(0) @db.Decimal(12, 2)
  currency  String   @default("USD")
  type      String   @default("CHECKING") // CHECKING, SAVINGS, etc.
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user              User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  debitTransactions Transaction[] @relation("DebitAccount")
  creditTransactions Transaction[] @relation("CreditAccount")

  @@map("accounts")
}

model Transaction {
  id              String   @id @default(cuid())
  amount          Decimal  @db.Decimal(12, 2)
  description     String
  type            String   // TRANSFER, DEPOSIT, WITHDRAWAL
  status          String   @default("COMPLETED") // PENDING, COMPLETED, FAILED
  debitAccountId  String?
  creditAccountId String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  debitAccount  Account? @relation("DebitAccount", fields: [debitAccountId], references: [id])
  creditAccount Account? @relation("CreditAccount", fields: [creditAccountId], references: [id])

  @@map("transactions")
}